#!/usr/bin/env python3
# https://en.wikipedia.org/wiki/Chapters_and_verses_of_the_Bible#Chapters

from simple_term_menu import TerminalMenu
import subprocess
import os

books = [
    {
        "title": "Genesis",
        "chapters": [
            ( 1,  4,    103),
            ( 2,  104,  180),
            ( 3,  181,  253),
            ( 4,  254,  334),
            ( 5,  335,  395),
            ( 6,  396,  470),
            ( 7,  471,  544),
            ( 8,  545,  611),
            ( 9,  612,  698),
            (10,  699,  774),
            (11,  775,  860),
            (12,  861,  924),
            (13,  925,  983),
            (14,  984, 1059),
            (15, 1060, 1119),
            (16, 1120, 1172),
            (17, 1173, 1259),
        ]
    },
    {
        "title": "Exodus",
        "chapters"  : []
    }
]

def transform_chapters(chapters_as_dict):
    lst = []
    for ch_index in chapters_as_dict:
        ch = chapters_as_dict[ch_index]
        lst.append((ch_index, ch["start"], ch["end"]))
    return lst

import json
data = json.load(open('./bible-kjv.json', 'r'))
books = list(map(lambda b: { 'title': b, 'chapters': transform_chapters(data[b]["chapters"]) }, data) )

def main():
    mainopts = list(map(lambda x: "{}".format(x["title"]), books))
    book_menu = TerminalMenu(mainopts)
    print("Select book:")
    selected_mainopts_index = book_menu.show()
    print(f"Book '{books[selected_mainopts_index]['title']}' selected!")
    chapters = books[selected_mainopts_index]["chapters"]
    chapteropts = ["Chapter {}".format(x) for x in range(1, len(chapters)+1)]
    print("Select chapter:")
    chapter_menu = TerminalMenu(chapteropts)
    selected_chapteropts_index = chapter_menu.show()
    (chapter, start, end) = chapters[selected_chapteropts_index]
    print(f"Chapter {chapter} {start}-{end} selected!")

    # os.system("cat resources/the-king-james-bible.txt | sed -n '{},{}p' | ./retype".format(start, end))

    fo = open("resources/the-king-james-bible.txt", "r")
    fo.seek(start)
    content = fo.read(end - start + 1)
    fo.close()
    subprocess.run(["./overtype"], text=True, input=content)

if __name__ == "__main__":
    main()
